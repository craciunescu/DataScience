# Create different vectors.

- Quant: ```num <- c(2.3, 4, 5.6, 7, 9.1)```
-  Qual: ```num <- c("rojo", "verde", "azul")```
- Logic: ```logic <- c(T, F, T)

# Remove anything
- rm()

# Define a matrix with the following data.
```R
pesos = (69.7, 71.3, 72.4, 68.4, 73)
alturas = (168, 178, 180, 165, 169)

    ## R fills up the values by column by default, not by row.

mat1 <- matrix(nrow = 2, ncol = 5, byrow = T, 
    c(69.7, 71.3, 72.4, 68.4, 73, 168, 178, 180, 165, 169))

```

# Execise: Create a logical matrix that'll end up like T F
#                                                      F T

``` mat2 <- matrix(nrow = 2, ncol = 2, byrow = T, c(T, F, F, T))

# How to read a .txt file.
- Tab between data.
- Header that number the rows.
- Except first row, it will have a white space, then HEADER.
- Last row in \n
- Decimals use "."

```satelites <- read.table("satelites.txt")```

 nombre radio
1   cordelia        13
2   ofelia          16
3   bianca          22
4   cresida         33
5   desdemona       29
6   julieta         42
7   rosalinda       27
8   belinda         34
9   luna-1986U10    20
10  calibano        30
11  luna-991        20
12  luna_199U2      15

```

Important to take into account the working directory.

# Read a CSV file. 
- Coma and space between data.
- Can separate with different symbol than comma but need to specify.
- One instance - One row
- Same as txt
- HEADERS ARE IMPORTANT

``` R
satelites_csv <- read.table(head = T, sep = "," , "satelites.csv")

head = T # There is a header
sep = "," # This the separator

NAME, RADIUS
cordelia, 13
ofelia, 16
bianca, 22
cresida, 33
desdemona, 29
julieta, 42
rosalinda, 27
belinda, 34
luna-1986U10, 20  
calibano, 30
luna-991, 20
luna_199U2, 1

```

# Obvious notes.

length() is used for length, lmao.
```length(dataframe $ name_of_var)```

## Various functions.
```range <- max(satelites $radio) - min(satelites $radio)```


### Exercise -> Define range function to automatize process.

``` R
range <- function(value) {max(value) - min(value)}
range(satelites$radio)
```

### Save out to a file.
- How to save a function forever (create a .R)

``` R
dump("name_of_function", file = "name_of_file.R")
```

- Load from a script
``` source("name_of_file")```


## Statistical Calculation.

### Abs freq.
```table(data) -> Absolute frequency of the data.```

### Frecuencia absoluta acumulada.
cumsum(table(data)) -> cumulator_sum(absolute_freq(data))

```
frecRetAcum <- function(values) {(cumsum(table(values))/length(values))}
```

```
freRet <- function(values) {return (table(values)/length(values))}
```

### Media de valores.

``` mean() ``` 

### Last value

Assign to last value freecabscumradio <- .Last.value

### Open a SPSS file.

Open a SPSS file in R.

Choose a file file.choose() and all that shit.

1. library(foreign)
2. dataset = read.spss("directory", to.data.frame=TRUE)
